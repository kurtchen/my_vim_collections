" Functions {{{
    " toggle absolute/relative line number {{{
    function! s:NumberToggle()
      if(&relativenumber == 1)
        set number
      else
        set relativenumber
      endif
    endfunc
    "}}}

    " init rtp for the custom plugins {{{
    function! s:InitCustomPlugins()
        if exists('g:my_vim_collections_dir')
            let l:files = split(globpath(expand(g:my_vim_collections_dir),'*'), '\n')
            for l:f in l:files
                if isdirectory(l:f)
                    let &runtimepath.=','.l:f
                endif
            endfor
        endif
    endfunc
    "}}}
"}}}

" My Pluggins {{{
    if filereadable(expand('~/.vimrc.local.local'))
        source ~/.vimrc.local.local
    endif

    call s:InitCustomPlugins()
"}}}

" Basic Settings {{{
    " disable mouse
    " set mouse-=a

    " 256 color
    set t_Co=256
"}}}

" spf-13 Configurations {{{
    " disable auto removing trailing whitespace
    let g:spf13_keep_trailing_whitespace = 1

    " disable indent guides
    let g:indent_guides_enable_on_vim_startup = 0
"}}}

" Key Mappings{{{
    " Normal Mode Key Mappings{{{
    nnoremap <C-n> :call <SID>NumberToggle()<cr>

    " map to open this file in split window
    nnoremap <Leader>ev :split $MYVIMRC.local<CR>
    nnoremap <Leader>sv :source $MYVIMRC.local<CR>

    " map to open TODO in split window
    nnoremap <Leader>et :split ~/Dropbox/Documents/TODO.txt<CR>

    " map to surround a word with ""
    nnoremap <Leader>" viw<Esc>a"<Esc>hbi"<Esc>lel
    nnoremap <Leader>' viw<Esc>a'<Esc>hbi'<Esc>lel
    nnoremap <Leader>"" viW<Esc>a"<Esc>hBi"<Esc>lEl
    nnoremap <Leader>'' viW<Esc>a'<Esc>hBi'<Esc>lEl

    " NERD Tree for all tab, and auto mirror
    nnoremap <C-e> :NERDTreeTabsToggle<CR>:NERDTreeMirror<CR>

    " for easy resize window
    nnoremap <C-w>++ 10<C-w>+
    nnoremap <C-w>-- 10<C-w>-
    nnoremap <C-w>>> 10<C-w>>
    nnoremap <C-w><< 10<C-w><
    "}}}

    " Insert Mode Key Mappings{{{
    " disable the bad habit keys
    inoremap <silent> jk <Esc>l
    "}}}

    " Mappings for FuzzyFind{{{
    let g:fuf_modesDisable = []
    let g:fuf_mrufile_maxItem = 400
    let g:fuf_mrucmd_maxItem = 400
    nnoremap <silent> sj     :FufBuffer<CR>
    nnoremap <silent> sb     :FufBuffer<CR>
    nnoremap <silent> sk     :FufFileWithCurrentBufferDir<CR>
    nnoremap <silent> sK     :FufFileWithFullCwd<CR>
    nnoremap <silent> sf     :FufFile<CR>
    nnoremap <silent> sl     :FufCoverageFileChange<CR>
    nnoremap <silent> sL     :FufCoverageFileChange<CR>
    nnoremap <silent> s<C-l> :FufCoverageFileRegister<CR>
    nnoremap <silent> sd     :FufDirWithCurrentBufferDir<CR>
    nnoremap <silent> sD     :FufDirWithFullCwd<CR>
    nnoremap <silent> s<C-d> :FufDir<CR>
    nnoremap <silent> sM     :FufMruFile<CR>
    nnoremap <silent> sm     :FufMruFileInCwd<CR>
    nnoremap <silent> sc     :FufMruCmd<CR>
    nnoremap <silent> su     :FufBookmarkFile<CR>
    nnoremap <silent> s<C-u> :FufBookmarkFileAdd<CR>
    vnoremap <silent> s<C-u> :FufBookmarkFileAddAsSelectedText<CR>
    nnoremap <silent> si     :FufBookmarkDir<CR>
    nnoremap <silent> s<C-i> :FufBookmarkDirAdd<CR>
    nnoremap <silent> sT     :FufTag<CR>
    nnoremap <silent> st     :FufTag!<CR>
    nnoremap <silent> s<C-]> :FufTagWithCursorWord!<CR>
    nnoremap <silent> s,     :FufBufferTag<CR>
    nnoremap <silent> s<     :FufBufferTag!<CR>
    vnoremap <silent> s,     :FufBufferTagWithSelectedText!<CR>
    vnoremap <silent> s<     :FufBufferTagWithSelectedText<CR>
    nnoremap <silent> s}     :FufBufferTagWithCursorWord!<CR>
    nnoremap <silent> s.     :FufBufferTagAll<CR>
    nnoremap <silent> s>     :FufBufferTagAll!<CR>
    vnoremap <silent> s.     :FufBufferTagAllWithSelectedText!<CR>
    vnoremap <silent> s>     :FufBufferTagAllWithSelectedText<CR>
    nnoremap <silent> s]     :FufBufferTagAllWithCursorWord!<CR>
    "nnoremap <silent> sg     :FufTaggedFile<CR>
    "nnoremap <silent> sG     :FufTaggedFile!<CR>
    nnoremap <silent> so     :FufJumpList<CR>
    nnoremap <silent> sp     :FufChangeList<CR>
    nnoremap <silent> sq     :FufQuickfix<CR>
    nnoremap <silent> sy     :FufLine<CR>
    nnoremap <silent> sh     :FufHelp<CR>
    nnoremap <silent> se     :FufEditDataFile<CR>
    nnoremap <silent> sr     :FufRenewCache<CR>
    "}}}
    "For mark plugin{{{
    nnoremap <unique> <Leader>// <Plug>MarkSearchAnyNext
    "}}}
    "For LookupFile plugin{{{
    nnoremap <unique> <silent> <F4> <Plug>LookupFile
    "}}}
    "For EasyMotion{{{
    nnoremap <silent> ff :call EasyMotion#F(0,0)<CR>
    nnoremap <silent> FF :call EasyMotion#F(0,1)<CR>
    nnoremap <silent> tt :call EasyMotion#T(0,0)<CR>
    nnoremap <silent> TT :call EasyMotion#T(0,1)<CR>
    nnoremap <silent> ww :call EasyMotion#WB(0,0)<CR>
    nnoremap <silent> WW :call EasyMotion#WBW(0,0)<CR>
    nnoremap <silent> bb :call EasyMotion#WB(0,1)<CR>
    nnoremap <silent> BB :call EasyMotion#WBW(0,1)<CR>
    nnoremap <silent> ee :call EasyMotion#E(0,0)<CR>
    nnoremap <silent> EE :call EasyMotion#EW(0,0)<CR>
    nnoremap <silent> gee :call EasyMotion#E(0,1)<CR>
    nnoremap <silent> gEE :call EasyMotion#EW(0,1)<CR>
    "nnoremap <silent> jjj :call EasyMotion#JK(0,0)<CR>
    "nnoremap <silent> kkk :call EasyMotion#JK(0,1)<CR>
    nnoremap <silent> nn :call EasyMotion#Search(0,0)<CR>
    nnoremap <silent> NN :call EasyMotion#Search(0,1)<CR>
    "}}}
"}}}

" Plugin Configurations {{{
    let g:LookupFile_TagExpr = string('./filenametags')

    "EasyMotion highlight{{{
    hi link EasyMotionTarget ErrorMsg
    hi link EasyMotionShade  Comment
    "}}}

    "Grep.vim {{{
    let Grep_Skip_Dirs = '.git .repo'
    "}}}
"}}}

" Abbreviations {{{
    iabbrev adn and
    iabbrev waht what
    iabbrev tehn then
"}}}

" Auto CMDS {{{
"}}}

" Commands {{{
    command! -nargs=* Gdv !git difftool --tool=vimdiff --no-prompt 

    " Grep
    command! -nargs=* -complete=file Jgrep Grep <args> *.java
    command! -nargs=* -complete=file Jrgrep Rgrep <args> *.java
    command! -nargs=* -complete=file Jfgrep Fgrep <args> *.java
    command! -nargs=* -complete=file Jrfgrep Rfgrep <args> *.java
    command! -nargs=* -complete=file Jegrep Egrep <args> *.java
    command! -nargs=* -complete=file Jregrep Regrep <args> *.java
    command! -nargs=* -complete=file Jagrep Agrep <args> *.java
    command! -nargs=* -complete=file Jragrep Ragrep <args> *.java
    command! -nargs=* -complete=file JgrepAdd grepAdd <args> *.java
    command! -nargs=* -complete=file JrgrepAdd RgrepAdd <args> *.java
    command! -nargs=* -complete=file JfgrepAdd FgrepAdd <args> *.java
    command! -nargs=* -complete=file JrfgrepAdd RfgrepAdd <args> *.java
    command! -nargs=* -complete=file JegrepAdd EgrepAdd <args> *.java
    command! -nargs=* -complete=file JregrepAdd RegrepAdd <args> *.java
    command! -nargs=* -complete=file JagrepAdd AgrepAdd <args> *.java
    command! -nargs=* -complete=file JragrepAdd RagrepAdd <args> *.java

    command! -nargs=* -complete=file Cgrep Grep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Crgrep Rgrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Cfgrep Fgrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Crfgrep Rfgrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Cegrep Egrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Cregrep Regrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Cagrep Agrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file Cragrep Ragrep <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CgrepAdd grepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CrgrepAdd RgrepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CfgrepAdd FgrepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CrfgrepAdd RfgrepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CegrepAdd EgrepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CregrepAdd RegrepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CagrepAdd AgrepAdd <args> *.c *.cpp *.cc *.h
    command! -nargs=* -complete=file CragrepAdd RagrepAdd <args> *.c *.cpp *.cc *.h

    command! -nargs=* -complete=file Xmlgrep Grep <args> *.xml
    command! -nargs=* -complete=file Xmlrgrep Rgrep <args> *.xml
    command! -nargs=* -complete=file Xmlfgrep Fgrep <args> *.xml
    command! -nargs=* -complete=file Xmlrfgrep Rfgrep <args> *.xml
    command! -nargs=* -complete=file Xmlegrep Egrep <args> *.xml
    command! -nargs=* -complete=file Xmlregrep Regrep <args> *.xml
    command! -nargs=* -complete=file Xmlagrep Agrep <args> *.xml
    command! -nargs=* -complete=file Xmlragrep Ragrep <args> *.xml
    command! -nargs=* -complete=file XmlgrepAdd grepAdd <args> *.xml
    command! -nargs=* -complete=file XmlrgrepAdd RgrepAdd <args> *.xml
    command! -nargs=* -complete=file XmlfgrepAdd FgrepAdd <args> *.xml
    command! -nargs=* -complete=file XmlrfgrepAdd RfgrepAdd <args> *.xml
    command! -nargs=* -complete=file XmlegrepAdd EgrepAdd <args> *.xml
    command! -nargs=* -complete=file XmlregrepAdd RegrepAdd <args> *.xml
    command! -nargs=* -complete=file XmlagrepAdd AgrepAdd <args> *.xml
    command! -nargs=* -complete=file XmlragrepAdd RagrepAdd <args> *.xml

    "command! -nargs=* Cbgrep Grep
    "command! -nargs=* CbgrepAdd BgrepAdd

"}}}

" Banner Text {{{
    if exists('g:my_show_splash_screen')
        echo "                                             _.._                                              "
        echo "                                            (    )                                             "
        echo "                                        .--.\\   /                                             "
        echo "                                        ( )) \\_.-,                                            "
        echo "                                        _`\\  ( (( )                                           "
        echo "                                       ( ``|  |  |                                             "
        echo "                                        `|_|__|__|                                             "
        echo "                                        /_ __ _ __|                                            "
        echo "                                      .-L_7__7_7_7|                                            "
        echo "   _______                           (   ,----,  (`.                                           "
        echo "   \\ ::::;`.                         |  .\\ \\ / /.|  \\                                      "
        echo "   /    [|  \                        |  :-.-:-,-:|   `-------.                                 "
        echo "   \\    [|   `-.___________________.-'  |_:_Q_:_|`-._______)  `----------.._                  "
        echo "   /    [|         (       /   |        ::::::::: .------------------' (__) `.                 "
        echo "   \\    [|          `-----'    |                 /  .--.  .--. .--.  .--.    ;                "
        echo "   /_____;                     7----------------'  :    ;:    ;;   ;:    :  /                  "
        echo "   :::::::::-.               .'   S$S S$S S$S S$S   `--'  `--' `--'  `--' .'                   "
        echo "             ,)              |                            |::::::::|     (                     "
        echo "             0-------....._  |             _________      |        |      )                    "
        echo "             '             `.|           .:         :.    |        |    .'                     "
        echo "                             `-._        |           |    |________| .-'                       "
        echo "                                 `-..____|___________|_________...--'                          "
        echo "\n"
        echo "                        ¸¸♬·¯·♩¸¸♪·¯·♫¸¸Happy Coding¸¸♬·¯·♩¸¸♪·¯·♫¸¸                           "
        echo "\n"
    endif
"}}}
